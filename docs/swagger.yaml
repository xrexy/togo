basePath: /
definitions:
  auth.SignInOKResponse:
    properties:
      token:
        type: string
    type: object
  auth.SignUpOKResponse:
    properties:
      token:
        example: uuidv4
        type: string
    type: object
  database.MessageStruct:
    properties:
      created_at:
        example: "1620000000"
        type: string
      error_code:
        example: 400
        type: integer
      error_message:
        example: User already exists
        type: string
    type: object
  database.Task:
    properties:
      content:
        example: This is my first task
        type: string
      created_at:
        example: "1620000000"
        type: string
      title:
        example: My first task
        type: string
      updated_at:
        example: "1620000000"
        type: string
      user_uuid:
        description: Foreign key
        example: uuidv4
        type: string
      uuid:
        example: uuidv4
        type: string
    type: object
  database.UserCredentials:
    properties:
      email:
        example: example@togo.dev
        type: string
      password:
        example: my_super_secret_password
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: To-Go is a simple API for managing tasks. It is built with Fiber and
    GORM.
  title: To-Go API
  version: 0.1-alpha
paths:
  /api/v1/auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/database.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignInOKResponse'
        "400":
          description: Invalid credentials format
          schema:
            $ref: '#/definitions/database.MessageStruct'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/database.MessageStruct'
        "500":
          description: Internal server error while signing token
          schema:
            $ref: '#/definitions/database.MessageStruct'
      summary: Sign in
      tags:
      - auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/database.UserCredentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignUpOKResponse'
        "400":
          description: User already exists
          schema:
            $ref: '#/definitions/database.MessageStruct'
      summary: Sign up
      tags:
      - auth
  /api/v1/task:
    get:
      consumes:
      - application/json
      description: Returns all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Task'
            type: array
        "500":
          description: Internal server error while getting tasks
          schema:
            $ref: '#/definitions/database.MessageStruct'
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Creates a task with title and content
      parameters:
      - description: Task title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Task content
        in: body
        name: content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Task'
        "500":
          description: Internal server error while creating task
          schema:
            $ref: '#/definitions/database.MessageStruct'
      summary: Create a task
      tags:
      - tasks
  /api/v1/task/{uuid}:
    get:
      consumes:
      - application/json
      description: Returns a task by uuid
      parameters:
      - description: Task UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Task'
        "500":
          description: Internal server error while getting task
          schema:
            $ref: '#/definitions/database.MessageStruct'
      summary: Get a task
      tags:
      - tasks
swagger: "2.0"
