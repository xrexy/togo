// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/signin": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.UserCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignInOKResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid credentials format",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    },
                    "500": {
                        "description": "Internal server error while signing token",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "description": "Creates a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.UserCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpOKResponse"
                        }
                    },
                    "400": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    }
                }
            }
        },
        "/api/v1/task": {
            "get": {
                "description": "Returns all tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting tasks",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a task with title and content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a task",
                "parameters": [
                    {
                        "description": "Task title",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Task content",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Task"
                        }
                    },
                    "500": {
                        "description": "Internal server error while creating task",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    }
                }
            }
        },
        "/api/v1/task/{uuid}": {
            "get": {
                "description": "Returns a task by uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Task"
                        }
                    },
                    "500": {
                        "description": "Internal server error while getting task",
                        "schema": {
                            "$ref": "#/definitions/database.MessageStruct"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.SignInOKResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.SignUpOKResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "uuidv4"
                }
            }
        },
        "database.MessageStruct": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "1620000000"
                },
                "error_code": {
                    "type": "integer",
                    "example": 400
                },
                "error_message": {
                    "type": "string",
                    "example": "User already exists"
                }
            }
        },
        "database.Task": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "This is my first task"
                },
                "created_at": {
                    "type": "string",
                    "example": "1620000000"
                },
                "title": {
                    "type": "string",
                    "example": "My first task"
                },
                "updated_at": {
                    "type": "string",
                    "example": "1620000000"
                },
                "user_uuid": {
                    "description": "Foreign key",
                    "type": "string",
                    "example": "uuidv4"
                },
                "uuid": {
                    "type": "string",
                    "example": "uuidv4"
                }
            }
        },
        "database.UserCredentials": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@togo.dev"
                },
                "password": {
                    "type": "string",
                    "example": "my_super_secret_password"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1-alpha",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "To-Go API",
	Description:      "To-Go is a simple API for managing tasks. It is built with Fiber and GORM.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
